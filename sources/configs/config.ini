; Общие параметры программного комплекса
[VFEM]
; Порядок базиса, 1 или 2
; [по умолчанию - 1]
basis_order = 1
; Тип базиса, 1 (неполный) или 2 (полный)
; [по умолчанию - 2]
basis_type = 2
; Порядок интегрированиия на тетраэдральных элементах, от 2 до 14 включительно
; [по умолчанию - 8]
tet_integration_order = 4
; Порядок интегрированиия на треугольных элементах, от 2 до 29 включительно
; [по умолчанию - 8]
tr_integration_order = 5
; Точность решения основной СЛАУ
; [по умолчанию - 1e-10]
eps_slae = 1e-10
; Точность решения СЛАУ неоднородных краевых условий первого типа
; [по умолчанию - 1e-14]
eps_slae_bound = 1e-15
; Использовать двухуровневый решатель или нет?
; [по умолчанию - no]
v_cycle_enabled = yes
; Точность нахождения начального приближения в двухуровневом решателе
; [по умолчанию - 0.01]
gamma_v_cycle_0 = 0.1
; Точность решения СЛАУ на полном пространстве в двухуровневом решателе
; [по умолчанию - 0.05]
gamma_v_cycle_full = 0.5
; Точность решения СЛАУ на пространстве ядра в двухуровневом решателе
; [по умолчанию - 0.01]
gamma_v_cycle_ker = 0.1
; Максимальное количество итераций для не двухуровневых решателей
; [по умолчанию - 15000]
max_iter = 15000
; Максимальное количество итераций при решении СЛАУ на полном пространстве и пространстве ядра
; в двухуровневом решателе
; [по умолчанию - 500]
max_iter_v_cycle_local = 100
; Описание типа решателя состоит из двух частей: название собственно решателя и название
; предобуславливателя. Общий синтаксис для описания решателей:
;   "SolverName<PreconditionerName>"
; Описание всех используемых решателей:
;  * "COCG" - COCG
;  * "COCG_Smooth" - COCG со сглаживанием невязки
;  * "COCG_Smooth_OpenMP" - COCG со сглаживанием невязки, распараллеленный через OpenMP
;  * "COCG_Smooth_MKL" - COCG со сглаживанием невязки, использующий библиотеку MKL
;  * "COCR" - COCR
;  * "COCR_Smooth" - COCR со сглавживанием невязки
;  * "BiCG_Complex" - Комплексный BiCG
;  * "BiCG_Complex_Smooth" - Комплексный BiCG со сглаживанием невязки
;  * "BiCGStab_Complex" - Комплексный BiCGStab
;  * "BiCGStab_Complex_Smooth" - Комплексный BiCGStab со сглаживанием невязки
;  * "GMRES_Complex" - Комплексный GMRES
;  * "GMRES_Complex_OpenMP" - Комплексный GMRES, распараллеленный через OpenMP
;  * "GMRES_Complex_MKL" - Комплексный GMRES, использующий библиотеку MKL
; Описание всех используемых предобуславливателей:
;  * "Nothing" - стандартный пустой предобуславливатель
;  * "Nothing_OpenMP" - пустой предобуславливатель, распараллеленный через OpenMP
;  * "Nothing_MKL" - пустой предобуславливатель, использующий библиотеку MKL
;  * "Di" - стандартный диагональный предобуславливатель (A=S*Q : S=Di, Q=I)
;  * "Di_OpenMP" - диагональный предобуславливатель, распараллеленный через OpenMP
;  * "Di_MKL" - диагональный предобуславливатель, использующий библиотеку MKL
;  * "LLT" - стандартный предобуславливатель неполным LL^T разложением (A=S*Q : S=L, Q=L^T)
;  * "LLT_MKL" - предобуславливатель неполным LL^T разложением, использующий библиотеку MKL
;  * "LDLT" - стандартный предобуславливатель неполным LDL^T разложением (A=S*Q : S=L*D, Q=L^T)
;  * "GS" - стандартный предобуславливатель типа Гаусса-Зейделя (A=S*Q : S=(D+L)^-1*D*(D+U)^-1, Q=I)
; Название решателя для решения основной СЛАУ
; [по умолчанию - COCG_Smooth<LLT>]
solver_name = "COCG_Smooth<LLT>"
; Названия решателя для решения СЛАУ неоднородных краевых условий первого типа 
; [по умолчанию - COCG_Smooth<LLT>]
solver_name_bound = "COCG_Smooth<LLT>"
; Названия решателя для решения СЛАУ на полном пространстве в двухуровневом решателе
; [по умолчанию - COCG_Smooth<LLT>]
solver_name_v_cycle_full = "GMRES<LLT>"
; Названия решателя для решения СЛАУ на пространстве ядра в двухуровневом решателе
; [по умолчанию - COCG_Smooth<LLT>]
solver_name_v_cycle_ker = "GMRES<LLT>"
; Путь к файлу с конечноэлементной сеткой
; [по умолчанию - mesh.msh]
filename_mesh = "mesh.msh"
; Путь к файлу с параметрами физических областей
; [по умолчанию - phys.ini]
filename_phys = "phys.ini"
; Путь к файлу с параметрами PML-слоя
; [по умолчанию - пустая строка (файл не задан, то есть PML-слой не используется)]
filename_pml = "config_pml.ini"
; Путь к файлу для сохранения или загрузки весов решения
; [по умолчанию - пустая строка (файл не задан, то есть загрузка/сохранение не производятся)]
filename_slae = "slae.txt"
; Для ускорения вычисления матрицы СЛАУ, выражения для краевых условий, правых частей и 
; аналитического решения могут быть скомпилированы "на лету". В настоящий момент такая
; возможность предоставляется для процессорных архитектур x86, x86_64 и x86_32 и операционных
; систем, использующих MSVC, MinGW или SysV ABI. Доступные значения:
;  * disable - не компилировать
;  * extcall - компилировать, использовать математические операции из стандартной математической
;    библиотеки C++
;  * inline - компилировать, использовать собственные реализации математических операций (в
;    большинстве случаев такой метод работает значительно быстрее, но не удовлетворяет IEEE 754
; [по умолчанию - disable]
jit_type = disable

; Параметры краевых условий первого типа (по умолчанию)
[Boundary]
; Включено использование неоднородных краевых условий первого типа или нет?
; [по умолчанию - no]
enabled = yes
; Покомпонентно заданная функция от x, y, z, omega, epsilon, sigma, mu, k2
x = 0.0
y = 0.0
z = 0.0

; Параметры краевых условий первого типа (двумерная физическая область 42)
[Boundary.42]
; Покомпонентно заданная функция от x, y, z, omega, epsilon, sigma, mu, k2
x = x + y * sigma - z + i * epsilon / mu ^ omega
y = x + y * sigma - z + i * epsilon / mu ^ omega
z = x + y * sigma - z + i * epsilon / mu ^ omega

; Параметры правой части (по умолчанию)
[Right]
; Включено использование неоднородной правой части или нет?
; [по умолчанию - no]
enabled = yes
; Покомпонентно заданная функция от x, y, z, omega, epsilon, sigma, mu, k2
x = 0.0
y = 0.0
z = 0.0

; Параметры правой части (трехмерная физическая область 42)
[Right.42]
; Покомпонентно заданная функция от x, y, z, omega, epsilon, sigma, mu, k2
x = x + y * sigma - z + i * epsilon / mu ^ omega
y = x + y * sigma - z + i * epsilon / mu ^ omega
z = x + y * sigma - z + i * epsilon / mu ^ omega

; Параметры аналитического решения (по умолчанию)
[Analytical]
; Включено использование аналитического решения или нет?
; [по умолчанию - no]
enabled = yes
; Покомпонентно заданная функция от x, y, z, omega, epsilon, sigma, mu, k2
x = 0.0
y = 0.0
z = 0.0

; Параметры аналитического решения (трехмерная физическая область область 42)
[Analytical.42]
; Покомпонентно заданная функция от x, y, z, omega, epsilon, sigma, mu, k2
x = x + y * sigma - z + i * epsilon / mu ^ omega
y = x + y * sigma - z + i * epsilon / mu ^ omega
z = x + y * sigma - z + i * epsilon / mu ^ omega

; Параметры 3D постпроцессора
[Postprocessing.1]
; Тип 1d, 2d или 3d
; [по умолчанию - 3d]
type = 3d
; Для 3d можно настроить только имя файла
; [по умолчанию - plot.plt]
filename = "plot.plt"
; Добавить ли метку времени запуска расчетов в имя файла?
; [по умолчанию - no]
timestamp = yes

; Параметры 2D постпроцессора
[Postprocessing.2]
; Тип 1d, 2d или 3d
; [по умолчанию - 3d]
type = 2d
; Имя файла
; [по умолчанию - plot.plt]
filename = "plot_y=0.dat"
; Добавить ли метку времени запуска расчетов в имя файла?
; [по умолчанию - no]
timestamp = yes
; Имя и значение фиксированной переменной
slice_var_name = Y
slice_var_value = 0.0
; Имя первой свободной переменной + откуда докуда брать значения + к-во точек
var1_name = X
var1_from = -700
var1_to = 700
var1_num = 70
; Имя второй свободной переменной + откуда докуда брать значения + к-во точек
var2_name = Z
var2_from = -700
var2_to = 700
var2_num = 70

; Параметры 1D постпроцессора
[Postprocessing.3]
; Тип 1d, 2d или 3d
; [по умолчанию - 3d]
type = 1d
; Имя файла
; [по умолчанию - plot.plt]
filename = "z=-100.dat"
; Добавить ли метку времени запуска расчетов в имя файла?
; [по умолчанию - no]
timestamp = yes
; Имена и значения двух фиксированных переменных
line_var1_name = Y
line_var1_value = 0.0
line_var2_name = Z
line_var2_value = -100
; Имя свободной переменной + откуда докуда брать значения + к-во точек
var_name = X
var_from = -600
var_to = 600
var_num = 70

